// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PropertyList snapshot test with no property details 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PropertyList
    addProperty={[Function]}
    fetchPropertyList={[Function]}
    removeProperty={[Function]}
    results={Array []}
    saved={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col"
>
          <div>
                    Results
          </div>
</div>,
        <div
          className="col"
>
          <div>
                    Saved Properties
          </div>
</div>,
      ],
      "className": "propertyListContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              Results
</div>,
            Array [],
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Results",
            },
            "ref": null,
            "rendered": "Results",
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              Saved Properties
</div>,
            Array [],
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Saved Properties",
            },
            "ref": null,
            "rendered": "Saved Properties",
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col"
>
            <div>
                        Results
            </div>
</div>,
          <div
            className="col"
>
            <div>
                        Saved Properties
            </div>
</div>,
        ],
        "className": "propertyListContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                Results
</div>,
              Array [],
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Results",
              },
              "ref": null,
              "rendered": "Results",
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                Saved Properties
</div>,
              Array [],
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Saved Properties",
              },
              "ref": null,
              "rendered": "Saved Properties",
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PropertyList snapshot test with property details returned 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PropertyList
    addProperty={[Function]}
    fetchPropertyList={[Function]}
    removeProperty={[Function]}
    results={
        Array [
            Object {
              "id": "1",
            },
          ]
    }
    saved={
        Array [
            Object {
              "id": "2",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col"
>
          <div>
                    Results
          </div>
          <PropertyCard
                    buttonClassName="addProperty"
                    buttonText="Add property"
                    callBackFn={[Function]}
                    propertyDetails={
                              Object {
                                        "id": "1",
                                      }
                    }
          />
</div>,
        <div
          className="col"
>
          <div>
                    Saved Properties
          </div>
          <PropertyCard
                    buttonClassName="removeProperty"
                    buttonText="Remove property"
                    callBackFn={[Function]}
                    propertyDetails={
                              Object {
                                        "id": "2",
                                      }
                    }
          />
</div>,
      ],
      "className": "propertyListContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              Results
</div>,
            Array [
              <PropertyCard
                buttonClassName="addProperty"
                buttonText="Add property"
                callBackFn={[Function]}
                propertyDetails={
                                Object {
                                                "id": "1",
                                              }
                }
/>,
            ],
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Results",
            },
            "ref": null,
            "rendered": "Results",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "buttonClassName": "addProperty",
              "buttonText": "Add property",
              "callBackFn": [Function],
              "propertyDetails": Object {
                "id": "1",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              Saved Properties
</div>,
            Array [
              <PropertyCard
                buttonClassName="removeProperty"
                buttonText="Remove property"
                callBackFn={[Function]}
                propertyDetails={
                                Object {
                                                "id": "2",
                                              }
                }
/>,
            ],
          ],
          "className": "col",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Saved Properties",
            },
            "ref": null,
            "rendered": "Saved Properties",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "buttonClassName": "removeProperty",
              "buttonText": "Remove property",
              "callBackFn": [Function],
              "propertyDetails": Object {
                "id": "2",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col"
>
            <div>
                        Results
            </div>
            <PropertyCard
                        buttonClassName="addProperty"
                        buttonText="Add property"
                        callBackFn={[Function]}
                        propertyDetails={
                                    Object {
                                                "id": "1",
                                              }
                        }
            />
</div>,
          <div
            className="col"
>
            <div>
                        Saved Properties
            </div>
            <PropertyCard
                        buttonClassName="removeProperty"
                        buttonText="Remove property"
                        callBackFn={[Function]}
                        propertyDetails={
                                    Object {
                                                "id": "2",
                                              }
                        }
            />
</div>,
        ],
        "className": "propertyListContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                Results
</div>,
              Array [
                <PropertyCard
                  buttonClassName="addProperty"
                  buttonText="Add property"
                  callBackFn={[Function]}
                  propertyDetails={
                                    Object {
                                                      "id": "1",
                                                    }
                  }
/>,
              ],
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Results",
              },
              "ref": null,
              "rendered": "Results",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "buttonClassName": "addProperty",
                "buttonText": "Add property",
                "callBackFn": [Function],
                "propertyDetails": Object {
                  "id": "1",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                Saved Properties
</div>,
              Array [
                <PropertyCard
                  buttonClassName="removeProperty"
                  buttonText="Remove property"
                  callBackFn={[Function]}
                  propertyDetails={
                                    Object {
                                                      "id": "2",
                                                    }
                  }
/>,
              ],
            ],
            "className": "col",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Saved Properties",
              },
              "ref": null,
              "rendered": "Saved Properties",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "buttonClassName": "removeProperty",
                "buttonText": "Remove property",
                "callBackFn": [Function],
                "propertyDetails": Object {
                  "id": "2",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
